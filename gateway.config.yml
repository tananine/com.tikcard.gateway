http:
  port: 8080
apiEndpoints:
  auth:
    paths: ['/auth/login', '/auth/register']
  profile:
    paths: ['/profile', '/profile/*', '/profile/information']
  activation:
    paths: ['/activation', '/activation/primary/*', '/activation/secondary/*']
  contact:
    paths:
      [
        '/contact',
        '/contact/me/app',
        '/contact/me/app/*',
        '/contact/me/list',
        '/contact/me/toggle',
        '/contact/me/sort',
      ]
  view:
    paths: '/view/*'
  use-link:
    paths: '/share/link/*'
  share:
    paths: ['/share/update', '/share/get']
  getRedirect:
    paths: '/device/scan/*'
serviceEndpoints:
  authService:
    url: 'http://docker.for.mac.localhost:3001'
  profileService:
    url: 'http://docker.for.mac.localhost:3002'
  deviceService:
    url: 'http://docker.for.mac.localhost:3003'
policies:
  - cors
  - proxy
  - authen
pipelines:
  authPipeline:
    apiEndpoints:
      - auth
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type'
      - proxy:
          - action:
              serviceEndpoint: authService
  profilePipeline:
    apiEndpoints:
      - profile
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - authen:
      - proxy:
          - action:
              serviceEndpoint: profileService
  activationPipeline:
    apiEndpoints:
      - activation
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - authen:
      - proxy:
          - action:
              serviceEndpoint: profileService
  contactPipeline:
    apiEndpoints:
      - contact
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - authen:
      - proxy:
          - action:
              serviceEndpoint: profileService
  viewPipeline:
    apiEndpoints:
      - view
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - authen:
      - proxy:
          - action:
              serviceEndpoint: profileService
  useLinkPipeline:
    apiEndpoints:
      - use-link
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - proxy:
          - action:
              serviceEndpoint: profileService
  sharePipeline:
    apiEndpoints:
      - share
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - authen:
      - proxy:
          - action:
              serviceEndpoint: profileService
  getRedirectPipeline:
    apiEndpoints:
      - getRedirect
    policies:
      - cors:
          - action:
              allowedHeaders: 'Content-Type, Authorization, profile'
      - proxy:
          - action:
              serviceEndpoint: deviceService
